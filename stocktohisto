Un contrat est en vie pour un mois de stock M si et seulement si :

date_debut < 1er jour du mois M

date_fin ‚â• 1er jour du mois M + 1 mois

üí° Donc :

Il faut que le contrat ait commenc√© avant le mois, pas pendant.

Et qu‚Äôil soit encore actif apr√®s la fin du mois, donc fin ‚â• 1er du mois suivant.

On exclut les NaT en date_fin (ils ne sont pas trait√©s).



import pandas as pd
from datetime import datetime
from dateutil.relativedelta import relativedelta

# Simule une base de contrats
# Remplace ceci par le chargement de ton vrai fichier
df = pd.read_csv("contrats.csv", parse_dates=["date_debut", "date_fin"])

# Supprimer les contrats sans date de fin
df = df.dropna(subset=["date_fin"])

# Date du jour
today = pd.Timestamp.today().normalize()

# R√©cup√©rer les 13 mois de stock (de M-13 √† M-1)
mois_stock = pd.date_range(end=today - pd.offsets.MonthBegin(1), periods=13, freq="MS")

# Initialisation de la liste pour stocker les r√©sultats
resultats = []

for mois in mois_stock:
    mois_suivant = mois + pd.offsets.MonthBegin(1)

    df_filtre = df[
        (df["date_debut"] < mois) &
        (df["date_fin"] >= mois_suivant)
    ].copy()

    df_filtre["mois_stock"] = mois
    resultats.append(df_filtre[["id_contrat", "mois_stock"]])  # Ajoute seulement l'essentiel

# Concat√©nation finale
df_stock_final = pd.concat(resultats).sort_values(["mois_stock", "id_contrat"])

# R√©sultat final
print(df_stock_final)

# Optionnel : export CSV
# df_stock_final.to_csv("stock_13_mois_glissants.csv", index=False)
