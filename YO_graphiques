Pour visualiser les statistiques de manière efficace, il est souvent préférable d'avoir un DataFrame en format "long" ou "tidy". Dans ce format, chaque ligne représente une observation unique avec des colonnes pour les variables clés (type, sous-type, stat, date, valeur). Ce format est bien supporté par les bibliothèques de visualisation comme seaborn et matplotlib.

Voici comment préparer le DataFrame en format long et comment créer des graphiques à partir de ce format :

Fonction pour préparer le DataFrame pour les graphiques
python
Copy code
def preparer_df_pour_graphiques(df_stats):
    # Convertir le DataFrame en format long
    df_long = df_stats.melt(id_vars=['type', 'sous-type', 'stat'], var_name='year_month', value_name='value')
    
    # Convertir year_month en datetime
    df_long['year_month'] = pd.to_datetime(df_long['year_month'].astype(str), format='%Y-%m')
    
    return df_long
Fonction pour créer les graphiques
python
Copy code
import matplotlib.pyplot as plt
import seaborn as sns

def creer_graphiques(df_long):
    # Graphiques globaux
    df_global = df_long[df_long['type'] == 'Global']
    
    plt.figure(figsize=(12, 6))
    sns.lineplot(data=df_global[df_global['stat'] == 'Nb_prel'], x='year_month', y='value', marker='o')
    plt.title('Nombre de prélèvements global par mois')
    plt.xlabel('Mois')
    plt.ylabel('Nombre de prélèvements')
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.show()
    
    plt.figure(figsize=(12, 6))
    sns.lineplot(data=df_global[df_global['stat'] == 'Succès_rate'], x='year_month', y='value', marker='o')
    plt.title('Taux de succès global par mois')
    plt.xlabel('Mois')
    plt.ylabel('Taux de succès')
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.show()

    # Graphiques par variable spécifiée
    for var in df_long['type'].unique():
        if var != 'Global':
            df_var = df_long[df_long['type'] == var]
            
            plt.figure(figsize=(12, 6))
            sns.lineplot(data=df_var[df_var['stat'] == 'Nb_prel'], x='year_month', y='value', hue='sous-type', marker='o')
            plt.title(f'Nombre de prélèvements par mois et par {var}')
            plt.xlabel('Mois')
            plt.ylabel('Nombre de prélèvements')
            plt.xticks(rotation=45)
            plt.legend(title=var)
            plt.tight_layout()
            plt.show()
            
            plt.figure(figsize=(12, 6))
            sns.lineplot(data=df_var[df_var['stat'] == 'Succès_rate'], x='year_month', y='value', hue='sous-type', marker='o')
            plt.title(f'Taux de succès par mois et par {var}')
            plt.xlabel('Mois')
            plt.ylabel('Taux de succès')
            plt.xticks(rotation=45)
            plt.legend(title=var)
            plt.tight_layout()
            plt.show()
Exemple d'utilisation des fonctions
python
Copy code
# Préparer le DataFrame pour les graphiques
df_long = preparer_df_pour_graphiques(resultat)

# Créer les graphiques
creer_graphiques(df_long)
Explication du code
preparer_df_pour_graphiques :

Cette fonction convertit le DataFrame en format long en utilisant la fonction melt de pandas.
La colonne year_month est convertie en type datetime pour un meilleur tri et manipulation des dates.
creer_graphiques :

Cette fonction crée des graphiques pour les statistiques globales et par variable spécifiée.
Pour les graphiques globaux, les lignes où type est 'Global' sont utilisées.
Pour les graphiques par variable, les lignes correspondantes sont utilisées, et les graphiques sont colorés en fonction de la variable sous-type.
En suivant ce format, vous aurez une flexibilité maximale pour créer différents types de graphiques et analyser les données visuellement de manière efficace.
